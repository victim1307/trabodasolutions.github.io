[{"categories":null,"contents":" Hello World A sample go program is show here.\npackage main import \u0026#34;fmt\u0026#34; func main() { message := greetMe(\u0026#34;world\u0026#34;) fmt.Println(message) } func greetMe(name string) string { return \u0026#34;Hello, \u0026#34; + name + \u0026#34;!\u0026#34; } Run the program as below:\n$ go run hello.go Variables Normal Declaration:\nvar msg string msg = \u0026#34;Hello\u0026#34; Shortcut:\nmsg := \u0026#34;Hello\u0026#34; Constants const Phi = 1.618 ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://victim1307.github.io/notes/go/basic/introduction/","summary":" Hello World A sample go program is show here.\npackage main import \u0026#34;fmt\u0026#34; func main() { message := greetMe(\u0026#34;world\u0026#34;) fmt.Println(message) } func greetMe(name string) string { return \u0026#34;Hello, \u0026#34; + name + \u0026#34;!\u0026#34; } Run the program as below:\n$ go run hello.go Variables Normal Declaration:\nvar msg string msg = \u0026#34;Hello\u0026#34; Shortcut:\nmsg := \u0026#34;Hello\u0026#34; Constants const Phi = 1.618 ","tags":null,"title":"Introduction"},{"categories":null,"contents":" Strings str := \u0026#34;Hello\u0026#34; Multiline string\nstr := `Multiline string` Numbers Typical types\nnum := 3 // int num := 3. // float64 num := 3 + 4i // complex128 num := byte(\u0026#39;a\u0026#39;) // byte (alias for uint8) Other Types\nvar u uint = 7 // uint (unsigned) var p float32 = 22.7 // 32-bit float Arrays // var numbers [5]int numbers := [...]int{0, 0, 0, 0, 0} Pointers func main () { b := *getPointer() fmt.Println(\u0026#34;Value is\u0026#34;, b) func getPointer () (myPointer *int) { a := 234 return \u0026amp;a a := new(int) *a = 234 Pointers point to a memory location of a variable. Go is fully garbage-collected.\nType Conversion i := 2 f := float64(i) u := uint(i) Slice slice := []int{2, 3, 4} slice := []byte(\u0026#34;Hello\u0026#34;) ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://victim1307.github.io/notes/go/basic/types/","summary":"Strings str := \u0026#34;Hello\u0026#34; Multiline string\nstr := `Multiline string` Numbers Typical types\nnum := 3 // int num := 3. // float64 num := 3 + 4i // complex128 num := byte(\u0026#39;a\u0026#39;) // byte (alias for uint8) Other Types\nvar u uint = 7 // uint (unsigned) var p float32 = 22.7 // 32-bit float Arrays // var numbers [5]int numbers := [...]int{0, 0, 0, 0, 0} Pointers func main () { b := *getPointer() fmt.","tags":null,"title":"Basic Types"},{"categories":null,"contents":" Condition if day == \u0026#34;sunday\u0026#34; || day == \u0026#34;saturday\u0026#34; { rest() } else if day == \u0026#34;monday\u0026#34; \u0026amp;\u0026amp; isTired() { groan() } else { work() } if _, err := doThing(); err != nil { fmt.Println(\u0026#34;Uh oh\u0026#34;) Switch switch day { case \u0026#34;sunday\u0026#34;: // cases don\u0026#39;t \u0026#34;fall through\u0026#34; by default! fallthrough case \u0026#34;saturday\u0026#34;: rest() default: work() } Loop for count := 0; count \u0026lt;= 10; count++ { fmt.Println(\u0026#34;My counter is at\u0026#34;, count) } entry := []string{\u0026#34;Jack\u0026#34;,\u0026#34;John\u0026#34;,\u0026#34;Jones\u0026#34;} for i, val := range entry { fmt.Printf(\u0026#34;At position %d, the character %s is present\\n\u0026#34;, i, val) n := 0 x := 42 for n != x { n := guess() } ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://victim1307.github.io/notes/go/basic/flow-control/","summary":"Condition if day == \u0026#34;sunday\u0026#34; || day == \u0026#34;saturday\u0026#34; { rest() } else if day == \u0026#34;monday\u0026#34; \u0026amp;\u0026amp; isTired() { groan() } else { work() } if _, err := doThing(); err != nil { fmt.Println(\u0026#34;Uh oh\u0026#34;) Switch switch day { case \u0026#34;sunday\u0026#34;: // cases don\u0026#39;t \u0026#34;fall through\u0026#34; by default! fallthrough case \u0026#34;saturday\u0026#34;: rest() default: work() } Loop for count := 0; count \u0026lt;= 10; count++ { fmt.Println(\u0026#34;My counter is at\u0026#34;, count) } entry := []string{\u0026#34;Jack\u0026#34;,\u0026#34;John\u0026#34;,\u0026#34;Jones\u0026#34;} for i, val := range entry { fmt.","tags":null,"title":"Flow Control"},{"categories":null,"contents":" Condition if day == \u0026#34;sunday\u0026#34; || day == \u0026#34;saturday\u0026#34; { rest() } else if day == \u0026#34;monday\u0026#34; \u0026amp;\u0026amp; isTired() { groan() } else { work() } if _, err := doThing(); err != nil { fmt.Println(\u0026#34;Uh oh\u0026#34;) ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://victim1307.github.io/notes/go/advanced/files/","summary":" Condition if day == \u0026#34;sunday\u0026#34; || day == \u0026#34;saturday\u0026#34; { rest() } else if day == \u0026#34;monday\u0026#34; \u0026amp;\u0026amp; isTired() { groan() } else { work() } if _, err := doThing(); err != nil { fmt.Println(\u0026#34;Uh oh\u0026#34;) ","tags":null,"title":"File Manipulation"},{"categories":null,"contents":" Variable MySQL Cheat Sheet Help with SQL commands to interact with a MySQL database\nMySQL Locations Mac /usr/local/mysql/bin Windows /Program Files/MySQL/MySQL version/bin Xampp /xampp/mysql/bin Add mysql to your PATH # Current Session export PATH=${PATH}:/usr/local/mysql/bin # Permanantly echo \u0026#39;export PATH=\u0026#34;/usr/local/mysql/bin:$PATH\u0026#34;\u0026#39; \u0026gt;\u0026gt; ~/.bash_profile On Windows - https://www.qualitestgroup.com/resources/knowledge-center/how-to-guide/add-mysql-path-windows/\nLogin mysql -u root -p Show Users SELECT User, Host FROM mysql.user; Create User CREATE USER \u0026#39;someuser\u0026#39;@\u0026#39;localhost\u0026#39; IDENTIFIED BY \u0026#39;somepassword\u0026#39;; Grant All Priveleges On All Databases GRANT ALL PRIVILEGES ON * . * TO \u0026#39;someuser\u0026#39;@\u0026#39;localhost\u0026#39;; FLUSH PRIVILEGES; Show Grants SHOW GRANTS FOR \u0026#39;someuser\u0026#39;@\u0026#39;localhost\u0026#39;; Remove Grants REVOKE ALL PRIVILEGES, GRANT OPTION FROM \u0026#39;someuser\u0026#39;@\u0026#39;localhost\u0026#39;; Delete User DROP USER \u0026#39;someuser\u0026#39;@\u0026#39;localhost\u0026#39;; Exit exit; Show Databases SHOW DATABASES Create Database CREATE DATABASE acme; Delete Database DROP DATABASE acme; Select Database USE acme; Create Table CREATE TABLE users( id INT AUTO_INCREMENT, first_name VARCHAR(100), last_name VARCHAR(100), email VARCHAR(50), password VARCHAR(20), location VARCHAR(100), dept VARCHAR(100), is_admin TINYINT(1), register_date DATETIME, PRIMARY KEY(id) ); Delete / Drop Table DROP TABLE tablename; Show Tables SHOW TABLES; Insert Row / Record INSERT INTO users (first_name, last_name, email, password, location, dept, is_admin, register_date) values (\u0026#39;Brad\u0026#39;, \u0026#39;Traversy\u0026#39;, \u0026#39;brad@gmail.com\u0026#39;, \u0026#39;123456\u0026#39;,\u0026#39;Massachusetts\u0026#39;, \u0026#39;development\u0026#39;, 1, now()); Insert Multiple Rows INSERT INTO users (first_name, last_name, email, password, location, dept, is_admin, register_date) values (\u0026#39;Fred\u0026#39;, \u0026#39;Smith\u0026#39;, \u0026#39;fred@gmail.com\u0026#39;, \u0026#39;123456\u0026#39;, \u0026#39;New York\u0026#39;, \u0026#39;design\u0026#39;, 0, now()), (\u0026#39;Sara\u0026#39;, \u0026#39;Watson\u0026#39;, \u0026#39;sara@gmail.com\u0026#39;, \u0026#39;123456\u0026#39;, \u0026#39;New York\u0026#39;, \u0026#39;design\u0026#39;, 0, now()),(\u0026#39;Will\u0026#39;, \u0026#39;Jackson\u0026#39;, \u0026#39;will@yahoo.com\u0026#39;, \u0026#39;123456\u0026#39;, \u0026#39;Rhode Island\u0026#39;, \u0026#39;development\u0026#39;, 1, now()),(\u0026#39;Paula\u0026#39;, \u0026#39;Johnson\u0026#39;, \u0026#39;paula@yahoo.com\u0026#39;, \u0026#39;123456\u0026#39;, \u0026#39;Massachusetts\u0026#39;, \u0026#39;sales\u0026#39;, 0, now()),(\u0026#39;Tom\u0026#39;, \u0026#39;Spears\u0026#39;, \u0026#39;tom@yahoo.com\u0026#39;, \u0026#39;123456\u0026#39;, \u0026#39;Massachusetts\u0026#39;, \u0026#39;sales\u0026#39;, 0, now()); Select SELECT * FROM users; SELECT first_name, last_name FROM users; Where Clause SELECT * FROM users WHERE location=\u0026#39;Massachusetts\u0026#39;; SELECT * FROM users WHERE location=\u0026#39;Massachusetts\u0026#39; AND dept=\u0026#39;sales\u0026#39;; SELECT * FROM users WHERE is_admin = 1; SELECT * FROM users WHERE is_admin \u0026gt; 0; Delete Row DELETE FROM users WHERE id = 6; Update Row UPDATE users SET email = \u0026#39;freddy@gmail.com\u0026#39; WHERE id = 2; Add New Column ALTER TABLE users ADD age VARCHAR(3); Modify Column ALTER TABLE users MODIFY COLUMN age INT(3); Order By (Sort) SELECT * FROM users ORDER BY last_name ASC; SELECT * FROM users ORDER BY last_name DESC; Concatenate Columns SELECT CONCAT(first_name, \u0026#39; \u0026#39;, last_name) AS \u0026#39;Name\u0026#39;, dept FROM users; Select Distinct Rows SELECT DISTINCT location FROM users; Between (Select Range) SELECT * FROM users WHERE age BETWEEN 20 AND 25; Like (Searching) SELECT * FROM users WHERE dept LIKE \u0026#39;d%\u0026#39;; SELECT * FROM users WHERE dept LIKE \u0026#39;dev%\u0026#39;; SELECT * FROM users WHERE dept LIKE \u0026#39;%t\u0026#39;; SELECT * FROM users WHERE dept LIKE \u0026#39;%e%\u0026#39;; Not Like SELECT * FROM users WHERE dept NOT LIKE \u0026#39;d%\u0026#39;; IN SELECT * FROM users WHERE dept IN (\u0026#39;design\u0026#39;, \u0026#39;sales\u0026#39;); Create \u0026amp; Remove Index CREATE INDEX LIndex On users(location); DROP INDEX LIndex ON users; New Table With Foreign Key (Posts) CREATE TABLE posts( id INT AUTO_INCREMENT, user_id INT, title VARCHAR(100), body TEXT, publish_date DATETIME DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY(id), FOREIGN KEY (user_id) REFERENCES users(id) ); Add Data to Posts Table INSERT INTO posts(user_id, title, body) VALUES (1, \u0026#39;Post One\u0026#39;, \u0026#39;This is post one\u0026#39;),(3, \u0026#39;Post Two\u0026#39;, \u0026#39;This is post two\u0026#39;),(1, \u0026#39;Post Three\u0026#39;, \u0026#39;This is post three\u0026#39;),(2, \u0026#39;Post Four\u0026#39;, \u0026#39;This is post four\u0026#39;),(5, \u0026#39;Post Five\u0026#39;, \u0026#39;This is post five\u0026#39;),(4, \u0026#39;Post Six\u0026#39;, \u0026#39;This is post six\u0026#39;),(2, \u0026#39;Post Seven\u0026#39;, \u0026#39;This is post seven\u0026#39;),(1, \u0026#39;Post Eight\u0026#39;, \u0026#39;This is post eight\u0026#39;),(3, \u0026#39;Post Nine\u0026#39;, \u0026#39;This is post none\u0026#39;),(4, \u0026#39;Post Ten\u0026#39;, \u0026#39;This is post ten\u0026#39;); INNER JOIN SELECT users.first_name, users.last_name, posts.title, posts.publish_date FROM users INNER JOIN posts ON users.id = posts.user_id ORDER BY posts.title; New Table With 2 Foriegn Keys CREATE TABLE comments( id INT AUTO_INCREMENT, post_id INT, user_id INT, body TEXT, publish_date DATETIME DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY(id), FOREIGN KEY(user_id) references users(id), FOREIGN KEY(post_id) references posts(id) ); Add Data to Comments Table INSERT INTO comments(post_id, user_id, body) VALUES (1, 3, \u0026#39;This is comment one\u0026#39;),(2, 1, \u0026#39;This is comment two\u0026#39;),(5, 3, \u0026#39;This is comment three\u0026#39;),(2, 4, \u0026#39;This is comment four\u0026#39;),(1, 2, \u0026#39;This is comment five\u0026#39;),(3, 1, \u0026#39;This is comment six\u0026#39;),(3, 2, \u0026#39;This is comment six\u0026#39;),(5, 4, \u0026#39;This is comment seven\u0026#39;),(2, 3, \u0026#39;This is comment seven\u0026#39;); Left Join SELECT comments.body, posts.title FROM comments LEFT JOIN posts ON posts.id = comments.post_id ORDER BY posts.title; Join Multiple Tables SELECT comments.body, posts.title, users.first_name, users.last_name FROM comments INNER JOIN posts on posts.id = comments.post_id INNER JOIN users on users.id = comments.user_id ORDER BY posts.title; Aggregate Functions SELECT COUNT(id) FROM users; SELECT MAX(age) FROM users; SELECT MIN(age) FROM users; SELECT SUM(age) FROM users; SELECT UCASE(first_name), LCASE(last_name) FROM users; Group By SELECT age, COUNT(age) FROM users GROUP BY age; SELECT age, COUNT(age) FROM users WHERE age \u0026gt; 20 GROUP BY age; SELECT age, COUNT(age) FROM users GROUP BY age HAVING count(age) \u0026gt;=2; ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://victim1307.github.io/notes/bash/advanced/","summary":"Variable MySQL Cheat Sheet Help with SQL commands to interact with a MySQL database\nMySQL Locations Mac /usr/local/mysql/bin Windows /Program Files/MySQL/MySQL version/bin Xampp /xampp/mysql/bin Add mysql to your PATH # Current Session export PATH=${PATH}:/usr/local/mysql/bin # Permanantly echo \u0026#39;export PATH=\u0026#34;/usr/local/mysql/bin:$PATH\u0026#34;\u0026#39; \u0026gt;\u0026gt; ~/.bash_profile On Windows - https://www.qualitestgroup.com/resources/knowledge-center/how-to-guide/add-mysql-path-windows/\nLogin mysql -u root -p Show Users SELECT User, Host FROM mysql.user; Create User CREATE USER \u0026#39;someuser\u0026#39;@\u0026#39;localhost\u0026#39; IDENTIFIED BY \u0026#39;somepassword\u0026#39;; Grant All Priveleges On All Databases GRANT ALL PRIVILEGES ON * .","tags":null,"title":"Bash Advanced"},{"categories":null,"contents":" Variable NAME=\u0026#34;John\u0026#34; echo $NAME echo \u0026#34;$NAME\u0026#34; echo \u0026#34;${NAME} Condition if [[ -z \u0026#34;$string\u0026#34; ]]; then echo \u0026#34;String is empty\u0026#34; elif [[ -n \u0026#34;$string\u0026#34; ]]; then echo \u0026#34;String is not empty\u0026#34; fi ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://victim1307.github.io/notes/bash/basic/","summary":" Variable NAME=\u0026#34;John\u0026#34; echo $NAME echo \u0026#34;$NAME\u0026#34; echo \u0026#34;${NAME} Condition if [[ -z \u0026#34;$string\u0026#34; ]]; then echo \u0026#34;String is empty\u0026#34; elif [[ -n \u0026#34;$string\u0026#34; ]]; then echo \u0026#34;String is not empty\u0026#34; fi ","tags":null,"title":"Bash Variables"},{"categories":["Basic"],"contents":"Greeting! This is an introduction post. This post tests the followings:\nHero image is in the same directory as the post. This post should be at top of the sidebar. Post author should be the same as specified in author.yaml file. ","date":"June 8, 2020","hero":"/posts/introduction/hero.svg","permalink":"https://victim1307.github.io/posts/introduction/","summary":"Greeting! This is an introduction post. This post tests the followings:\nHero image is in the same directory as the post. This post should be at top of the sidebar. Post author should be the same as specified in author.yaml file. ","tags":["Basic","Multi-lingual"],"title":"Introduction"},{"categories":null,"contents":"This is a sample post intended to test the followings:\nA different post author. Table of contents. Markdown content rendering. Math rendering. Emoji rendering. Markdown Syntax Rendering Headings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\nTables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables Inline Markdown In Table italics bold strikethrough code Code Blocks Code block with backticks html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block with Hugo\u0026rsquo;s internal highlight shortcode \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; List Types Ordered List First item Second item Third item Unordered List List item Another item And another item Nested list Fruit Apple Orange Banana Dairy Milk Cheese Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nMath Rendering Block math: $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\nEmoji Rendering 🙈 :see_no_evil: 🙉 :hear_no_evil: 🙊 :speak_no_evil:\nThe above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"June 8, 2020","hero":"/posts/markdown-sample/hero.svg","permalink":"https://victim1307.github.io/posts/markdown-sample/","summary":"This is a sample post intended to test the followings:\nA different post author. Table of contents. Markdown content rendering. Math rendering. Emoji rendering. Markdown Syntax Rendering Headings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur?","tags":null,"title":"Markdown Samples"},{"categories":["Basic"],"contents":"This sample post tests the followings:\nCategory, sub-category nesting in the sidebar. Hero image and other images are in images folder inside this post directory. Different media rendering like image, tweet, YouTube video, Vimeo video etc. Image Sample Tweet Sample Owl bet you\u0026#39;ll lose this staring contest 🦉 pic.twitter.com/eJh4f2zncC\n\u0026mdash; San Diego Zoo Wildlife Alliance (@sandiegozoo) October 26, 2021 YouTube Video Sample Vimeo Video Sample ","date":"June 8, 2020","hero":"/posts/category/sub-category/rich-content/images/forest.jpg","permalink":"https://victim1307.github.io/posts/category/sub-category/rich-content/","summary":"This sample post tests the followings:\nCategory, sub-category nesting in the sidebar. Hero image and other images are in images folder inside this post directory. Different media rendering like image, tweet, YouTube video, Vimeo video etc. Image Sample Tweet Sample Owl bet you\u0026#39;ll lose this staring contest 🦉 pic.twitter.com/eJh4f2zncC\n\u0026mdash; San Diego Zoo Wildlife Alliance (@sandiegozoo) October 26, 2021 YouTube Video Sample Vimeo Video Sample ","tags":["Markdown","Content Organization","Multi-lingual"],"title":"Rich Content"},{"categories":null,"contents":"This is a sample post intended to test the followings:\nDefault hero image. Different shortcodes. Alert The following alerts are available in this theme.\nThis is sample alert with type=\u0026quot;success\u0026quot;. This is sample alert with type=\u0026quot;danger\u0026quot;. This is sample alert with type=\u0026quot;warning\u0026quot;. This is sample alert with type=\u0026quot;info\u0026quot;. This is sample alert with type=\u0026quot;dark\u0026quot;. This is sample alert with type=\u0026quot;primary\u0026quot;. This is sample alert with type=\u0026quot;secondary\u0026quot;. Image A sample image without any attribute. A sample image with height and width attributes. A center aligned image with height and width attributes. A image with float attribute. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras egestas lectus sed leo ultricies ultricies. Praesent tellus risus, eleifend vel efficitur ac, venenatis sit amet sem. Ut ut egestas erat. Fusce ut leo turpis. Morbi consectetur sed lacus vitae vehicula. Cras gravida turpis id eleifend volutpat. Suspendisse nec ipsum eu erat finibus dictum. Morbi volutpat nulla purus, vel maximus ex molestie id. Nullam posuere est urna, at fringilla eros venenatis quis.\nFusce vulputate dolor augue, ut porta sapien fringilla nec. Vivamus commodo erat felis, a sodales lectus finibus nec. In a pulvinar orci. Maecenas suscipit eget lorem non pretium. Nulla aliquam a augue nec blandit. Curabitur ac urna iaculis, ornare ligula nec, placerat nulla. Maecenas aliquam nisi vitae tempus vulputate.\nSplit This theme support splitting the page into as many columns as you wish.\nTwo column split Left Column Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras egestas lectus sed leo ultricies ultricies.\nRight Column Fusce ut leo turpis. Morbi consectetur sed lacus vitae vehicula. Cras gravida turpis id eleifend volutpat.\nThree column split Left Column Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras egestas lectus sed leo ultricies ultricies.\nMiddle Column Aenean dignissim dictum ex. Donec a nunc vel nibh placerat interdum.\nRight Column Fusce ut leo turpis. Morbi consectetur sed lacus vitae vehicula. Cras gravida turpis id eleifend volutpat.\nVertical Space Give vertical space between two lines.\nThis is line one. This is line two. It should have 4rem vertical space with previous line.\nVideo Video by Rahul Sharma from Pexels.\nMermaid Here, are few example of mermaid shortcode.\nGraph:\ngraph LR; A[Hard edge] --\u003e|Link text| B(Round edge) B --\u003e C{Decision} C --\u003e|One| D[Result one] C --\u003e|Two| E[Result two] Sequence Diagram:\nsequenceDiagram participant Alice participant Bob Alice-\u003e\u003eJohn: Hello John, how are you? loop Healthcheck John-\u003e\u003eJohn: Fight against hypochondria end Note right of John: Rational thoughts prevail! John--\u003e\u003eAlice: Great! John-\u003e\u003eBob: How about you? Bob--\u003e\u003eJohn: Jolly good! Gantt diagram:\ngantt dateFormat YYYY-MM-DD title Adding GANTT diagram to mermaid excludes weekdays 2014-01-10 section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d Class Diagram:\nclassDiagram Class01 \u003c|-- AveryLongClass : Cool Class03 *-- Class04 Class05 o-- Class06 Class07 .. Class08 Class09 --\u003e C2 : Where am i? Class09 --* C3 Class09 --|\u003e Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla Class08 \u003c--\u003e C2: Cool label Git Graph:\ngitGraph commit id: \"ZERO\" branch develop commit id:\"A\" checkout main commit id:\"ONE\" checkout develop commit id:\"B\" checkout main commit id:\"TWO\" cherry-pick id:\"A\" commit id:\"THREE\" checkout develop commit id:\"C\" ER Diagram:\nerDiagram CUSTOMER ||--o{ ORDER : places ORDER ||--|{ LINE-ITEM : contains CUSTOMER }|..|{ DELIVERY-ADDRESS : uses Gist Embeded PDF Page: / Previous Next ","date":"June 8, 2020","hero":"/posts/shortcodes/boat.jpg","permalink":"https://victim1307.github.io/posts/shortcodes/","summary":"This is a sample post intended to test the followings:\nDefault hero image. Different shortcodes. Alert The following alerts are available in this theme.\nThis is sample alert with type=\u0026quot;success\u0026quot;. This is sample alert with type=\u0026quot;danger\u0026quot;. This is sample alert with type=\u0026quot;warning\u0026quot;. This is sample alert with type=\u0026quot;info\u0026quot;. This is sample alert with type=\u0026quot;dark\u0026quot;. This is sample alert with type=\u0026quot;primary\u0026quot;. This is sample alert with type=\u0026quot;secondary\u0026quot;. Image A sample image without any attribute.","tags":null,"title":"Shortcodes Samples"},{"categories":null,"contents":"","date":"June 8, 2020","hero":"/images/default-hero.jpg","permalink":"https://victim1307.github.io/posts/category/sub-category/_index.bn/","summary":"","tags":null,"title":"Sub-Category"}]